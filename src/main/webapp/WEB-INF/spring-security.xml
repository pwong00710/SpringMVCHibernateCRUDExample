<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/resources/**" access="permitAll" />

		<intercept-url pattern="/getAllCountries" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/*Country/**" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/rest/**" access="hasAnyRole('ROLE_USER')" />
		<intercept-url pattern="/SpringRestfulWebServicesCRUDExample.jsp" access="hasAnyRole('ROLE_USER')" />

		<form-login
		    login-page="/login"
		    default-target-url="/getAllCountries"
		    login-processing-url="/j_spring_security_check" 
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password" />
		<!--
		<logout logout-success-url="/index" logout-url="/j_spring_security_logout" />
		-->
		<logout logout-success-url="/index" invalidate-session="true" logout-url="/logout" />
		
		<csrf disabled="false" />
		
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/expired.jsp" />
		</session-management>
	</http>
	
	<!--
	<http pattern="/resources/**" security="none"/>
	-->
	
	<!-- 
	<http pattern="/j_spring_security_logout" security="none"/>
 	-->
 	
	<!-- Default Authentication -->
	<!--
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="java2blog" password="java123" authorities="ROLE_ADMIN" />
				<user name="tutorialspoint" password="tutorial123" authorities="ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager>
	-->
	
	<!-- LDAP Authentication -->
	<!--    
    <authentication-manager>
            <ldap-authentication-provider
                user-search-base="ou=Users"
                user-search-filter="(uid={0})"
                group-search-base="ou=Groups"
                group-search-filter="(uniqueMember={0})"
                group-role-attribute="cn"
                role-prefix="ROLE_"
                >
            </ldap-authentication-provider>
    </authentication-manager>
    -->
    
    <!-- Build-in Apache Directory Service -->
    <!--
    <ldap-server root="dc=example,dc=com" ldif="classpath:users.ldif"/>
    -->
    
    <!-- Standalone Apache Directory Service -->
    <!--
    <ldap-server url="${ldap.url}"
    			 manager-dn="${ldap.admin.username}" 
    			 manager-password="${ldap.admin.password}" />
	-->

	<!-- JDBC authentication -->    			 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username =?  " />
		<password-encoder ref="encoder" />
	  </authentication-provider>
	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="8" />
	</beans:bean>
	
</beans:beans>
